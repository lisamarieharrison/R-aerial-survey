\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}
\title{Preliminary seasonal analysis of Aerial Survey data}
\author{Lisa-Marie Harrison}
\maketitle


<<readData, echo=false>>=
source("C:/Users/Lisa/Documents/phd/aerial survey/R/code/R-aerial-survey/fun_calculate_envt_effort.R")
dat <- read.csv("C:/Users/Lisa/Documents/phd/aerial survey/R/data/full_data_set_20150410.csv", header = T)
library(chron)
library(stats)
dat$Time <- chron(times. = dat$Time, format = "h:m:s")
dat$Date <- chron(dates. = as.character(dat$Date), format = "d/m/y")

dat$Beaufort.Sea.State[dat$Beaufort.Sea.State == 1.5] <- 1
dat_north <- dat[dat$Flight.Direction == "N", ]
dat_south <- dat[dat$Flight.Direction == "S", ]

#calculate number of hours flown in each direction
effort_north <- calculateEffort(dat_north)
envt_effort <- effort_north$envt.var
hours_flown_north <- effort_north$total


effort_south <- calculateEffort(dat_south)
envt_effort_south <- effort_south$envt.var
hours_flown_south <- effort_south$total

dat_season_north <- dat_north[dat_north$Species %in% c("B", "BOT", "HH", "W"), ]
dat_season_south <- dat_south[dat_south$Species %in% c("B", "BOT", "HH", "W"), ]
dat_season_north$Species <- factor(dat_season_north$Species)
dat_season_south$Species <- factor(dat_season_south$Species)
@

To date there have been a total of \Sexpr{length(unique(dat$Date))} survey days, each with a north and south-bound survey (except for one day where the northbound flight was flown at 60kts as a trial and has hence been removed from this analysis). There were a total of \Sexpr{effort_north$total}hours on-effort flown in the Northern direction and \Sexpr{effort_south$total}hours in the Southern direction. Off-effort times such as harbour crossings and circles for photographs are not included in these times.

\paragraph{Seasonal differences}

There are obvious seasonal differences seen in the shark species, with a higher number of hammerhead and white sharks seen in Summer and very few in Autumn. However seasonal differences are more difficult to discern for bottlenose dolphins and baitfish. The barplots for each species below show the number of sightings on each survey day.

<<speciesHist, echo=false, results=hide>>=

png("speciesHist.png")

par(mfrow = c(2, 2))

dat <- dat[order(dat$Date), ]
sightings_tab <- table(dat$Date, dat$Species)
d <- range(dat$Date)
par(mfrow = c(2, 2))

#baitfish
x <- seq(d[1], d[2])
y <- rep(0, length(x))
y[x %in% unique(dat$Date)] <- sightings_tab[, which(colnames(sightings_tab) == "B")]
barplot(y, main = "Baitfish sightings", col = "gray23")
axis(1, at = c(10, 150, 350, 450, 560), c("Summer 13/14", "April 14", "Sept 14", "Summer 14/15", "April 15"))

#bottlenose dolphin
x <- seq(d[1], d[2])
y <- rep(0, length(x))
y[x %in% unique(dat$Date)] <- sightings_tab[, which(colnames(sightings_tab) == "BOT")]
barplot(y, main = "Bottlenose dolphin sightings", col = "gray23")
axis(1, at = c(10, 150, 350, 450, 560), c("Summer 13/14", "April 14", "Sept 14", "Summer 14/15", "April 15"))

#hammerhead shark
x <- seq(d[1], d[2])
y <- rep(0, length(x))
y[x %in% unique(dat$Date)] <- sightings_tab[, which(colnames(sightings_tab) == "HH")]
barplot(y, main = "Hammerhead shark sightings", col = "gray23")
axis(1, at = c(10, 150, 350, 450, 560), c("Summer 13/14", "April 14", "Sept 14", "Summer 14/15", "April 15"))

#White shark 
x <- seq(d[1], d[2])
y <- rep(0, length(x))
y[x %in% unique(dat$Date)] <- sightings_tab[, which(colnames(sightings_tab) == "W")]
barplot(y, main = "White shark sightings", col = "gray23")
axis(1, at = c(10, 150, 350, 450, 560), c("Summer 13/14", "April 14", "Sept 14", "Summer 14/15", "April 15"))

dev.off()

@

\includegraphics{speciesHist}

There are no significant differences between the number of sightings/survey between seasons. This basic analysis is currently not including environmental conditions. It is still possible that there is a difference in the number of sightings per survey across seasons however that is masked by worse environmental conditions in one season. While it appears that there are more sightings during Summer 14/15 compared to Spring or Autumn, there are less sightings in Summer 13/14. This may indicate an annual difference between the two summers, or it may be an artifact of the survey schedule. As Summer 13/14 was the first season of flights for the primary observer, it is possible that there were a lower number of sightings during this season due to observer inexperience. This is very difficult to discern as there is no measure of the learning curve of the observer.

<<testSeasonalDifferences, echo=false>>=

# ----------------------- TEST SEASONAL DIFFERENCES -------------------------- #
season_tab <- table(dat_season_north$Date, dat_season_north$Season)
season_tab[season_tab > 0] <- 1
days_per_season <- colSums(season_tab)
table(dat_season_north$Species, dat_season_north$Season)/rep(days_per_season, each = 4)


d <- dat_season_north
d$Species <- rep(1, nrow(d))
sighting_tab <- table(d$Date, d$Species)

lm.dat <- as.matrix(cbind(rownames(sighting_tab), sighting_tab[, 1], as.character(dat$Season[dat$Type == "SS" & dat$Flight.Direction == "N"])))
colnames(lm.dat) <- c("date", "sightings", "season")

lm.season <- lm(as.numeric(lm.dat[, 2]) ~ lm.dat[, 3])
@

\paragraph{Environmental condition influence}

Environmental conditions are likely to have a large influence on sighting rates. It is expected that there would be less sightings at higher sea states, turbid water and high cloud cover. As sighting effort is highly skewed towards fine weather conditions, the number of sightings at each level cannot be directly compared. Instead the number of hours of effort at each sighting level are calculated and used to weight the number of sightings. The north and south-bound transects are analysed separately, because environmental conditions may affect sightings rates differently depending on whether the observer is looking on- or offshore.

<<sightingsEnvironmentalLevelNorth, echo=false, results=hide>>=

# -------------------- SIGHTINGS AT EACH ENVIRONTMENTAL LEVEL ---------------- #

png("sightingsEnvironmentalLevelNorth.png")

par(mfrow = c(2, 2))

#sea state
north_tab <- table(dat_season_north$Beaufort.Sea.State, dat_season_north$Species)
species <- which(colnames(north_tab) %in% c("B", "BOT", "HH", "W"))
north_tab_effort <- north_tab[, species]/(envt_effort[c(1, 4, 6)]/60)

barplot(north_tab_effort, beside = T, legend = T, main = "Sightings/hr at each sea state", xaxt = "n")
axis(1, at = c(2, 6, 10, 14), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))

#cloud cover
north_tab <- table(dat_season_north$Cloud.cover, dat_season_north$Species)
north_tab_effort <- north_tab[, species]/(envt_effort[c(8:16)]/60)

barplot(north_tab_effort, beside = T, main = "Sightings/hr at each cloud cover", xaxt = "n", legend = T, args.legend = c(cex = 0.5))
axis(1, at = c(5, 18, 29, 40), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))


#turbidity
north_tab <- table(dat_season_north$Water.clarity, dat_season_north$Species)
north_tab_effort <- north_tab[, species]/(envt_effort[c(17:19)]/60)

barplot(north_tab_effort, beside = T, main = "Sightings/hr at each turbidity", xaxt = "n", legend = T)
axis(1, at = c(2, 6, 10, 14), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))

dev.off()

png("sightingsEnvironmentalLevelSouth.png")

par(mfrow = c(2, 2))

#sea state
south_tab <- table(dat_season_south$Beaufort.Sea.State, dat_season_south$Species)
species <- which(colnames(south_tab) %in% c("B", "BOT", "HH", "W"))
south_tab_effort <- south_tab[1:3, species]/(envt_effort_south[c(1, 4, 6)]/60)

barplot(south_tab_effort, beside = T, legend = T, main = "Sightings/hr at each sea state", xaxt = "n")
axis(1, at = c(2, 6, 10, 14), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))

#cloud cover
south_tab <- table(dat_season_south$Cloud.cover, dat_season_south$Species)
south_tab_effort <- south_tab[, species]/(envt_effort_south[c(8:16)]/60)

barplot(south_tab_effort, beside = T, main = "Sightings/hr at each cloud cover", xaxt = "n", legend = T, args.legend = c(cex = 0.5))
axis(1, at = c(5, 18, 29, 40), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))

#turbidity
south_tab <- table(dat_season_south$Water.clarity, dat_season_south$Species)
south_tab_effort <- south_tab[1:3, species]/(envt_effort_south[c(17:19)]/60)

barplot(south_tab_effort, beside = T, main = "Sightings/hr at each turbidity", xaxt = "n", legend = T)
axis(1, at = c(2, 6, 10, 14), c("Baitfish", "Bottlenose Dolphin", "Hammerhead Shark", "White shark"))

dev.off()

@

Sea state had a similar effect on number of sightings in both directions. Baitfish showed a very definite pattern in decrease in sightings/hr as sea state increased. Bottlenose dolphin sightings/hr were similar at sea states 1 and 2, but halved when sea state increased to 3. Sea state did not have as much effect on hammerhead sharks as for dolphins and fish. There were so few white shark sightings that it is difficult to assess any relationship to environmental conditions. In general, sighting rates were lower when there was full cloud cover. However there is no obvious relationship between sighting rate and cloud cover measured out of 8.\\*

Different patterns between sighting rate and turbidity level were seen in the North and South directions. In the northern direction, poor turbidity greatly decreased the number of baitfish and dolphin sightings/hr. However in the southern direction, baitfish and dolphin sightings were seen to increase with increasing turbidity. Increasing sightings in more murky water is not expected and there is not a clear reason why this would be the case.\\*

These results indicate that north and southbound flights must be separately corrected for environmental conditions, as they have a different effect on sighting rate depending on flight direction.

\includegraphics{sightingsEnvironmentalLevelNorth.png}\\
\caption{\textit{Sightings/hr in the Northbound direction}}\\

\includegraphics{sightingsEnvironmentalLevelSouth.png}\\
\caption{\textit{Sightings/hr in the Southbound direction}}\\

<<tide, echo=false, results=hide>>=
#tide data
tide_tab <- table(dat$Species, dat$Tide)
species <- which(rownames(tide_tab) %in% c("B", "BOT", "HH", "W"))
date_tab <- table(dat$Date, dat$Tide)
date_tab[date_tab > 0] <- 1
date_weight <- colSums(date_tab)

png("tide.png")

par(mfrow = c(2, 2))

barplot(tide_tab[species[1], ]/date_weight, beside = TRUE, xlab = "tide height (m)", main = "baitfish sightings at tide heights")
barplot(tide_tab[species[2], ]/date_weight, beside = TRUE, xlab = "tide height (m)", main = "dolphin sightings at tide heights")
barplot(tide_tab[species[3], ]/date_weight, beside = TRUE, xlab = "tide height (m)", main = "hammerhead sightings at tide heights")
barplot(tide_tab[species[4], ]/date_weight, beside = TRUE, xlab = "tide height (m)", main = "white shark sightings at tide heights")
dev.off()
@

\includegraphics{tide}

\paragraph{Relationship of shark and dolphin sightings to baitfish}

Dolphin and shark sightings may be seen near baitfish schools since they are an important food source. As the transect width (300m) is negligable compared to the transect length (~250km), only the latitudinal distance between sightings is calculated. The distance is calculated using the Haversine function.

<<calcDistanceBetweenSightings, echo=false>>=

# ----------------------- DISTANCE BETWEEN SIGHTINGS ------------------------- #

deg2rad <- function(deg) {
  #converts degrees to radians
  #input: degree coordinate
  #returns: radian coordinate 
  
  return(deg*pi/180)
}

gcd.hf <- function(lat1, long1, lat2, long2) {
  #calculates distance between two coordinates using the Haversine formula (hf)
  #input: radian latitude and longitude coordinates
  #returns: distance between coordinates in km
  
  R <- 6371 # Earth mean radius [km]
  delta.long <- (long2 - long1)
  delta.lat  <- (lat2 - lat1)
  a <- sin(delta.lat/2)^2 + cos(lat1) * cos(lat2) * sin(delta.long/2)^2
  c <- 2 * asin(min(1, sqrt(a)))
  d = R * c
  return(d) 
  
}

#calculate distances between all sightings on the same day
distance <- matrix(0, nrow = nrow(dat_season_north), ncol = nrow(dat_season_north))
for (i in 1:nrow(dat_season_north)) {
  for (j in 1:nrow(dat_season_north)) {
    if (dat_season_north$Date[i] == dat_season_north$Date[j]) {
      distance[i, j] <- gcd.hf(deg2rad(dat_season_north$Lat[i]), deg2rad(dat_season_north$Long[i]), deg2rad(dat_season_north$Lat[j]), deg2rad(dat_season_north$Long[j]))    
    }
  }
}

species <- dat_season_north$Species
bot <- which(species == "BOT")
bait <- which(species == "B")
white <- which(species == "W")
distance[distance == 0] <- NA
@

<<distanceBetweenSightings, echo=false, results=hide>>=
png("distanceBetweenSightings.png")
par(mfrow = c(1, 2))
hist(distance[bot, bait], xlab = "km", main = "Bottlenose dolphin", col = "lightgrey")
hist(distance[white, bait], xlab = "km", main = "White sharks", col = "lightgrey")
dev.off()
@

\includegraphics{distanceBetweenSightings}\\*
\caption{\textit{Distance between dolphin and shark sightings and all baitfish seen on the same day}}\\

<<minDistToFish, echo=false, results=hide>>=
#minimum distance to fish from each sighting
png("minDistToFish.png")
par(mfrow = c(1, 2))
min_dist_to_fish <- apply(distance[bot, bait], 1, min, na.rm = TRUE)
min_dist_to_fish[min_dist_to_fish == "Inf"] <- NA
hist(min_dist_to_fish, breaks = 150, main = "Bottlenose dolphin", col = "lightgrey")

min_dist_to_fish <- apply(distance[white, bait], 1, min, na.rm = TRUE)
min_dist_to_fish[min_dist_to_fish == "Inf"] <- NA
hist(min_dist_to_fish, breaks = 150, main = "White shark", col = "lightgrey")
dev.off()
@

\includegraphics{minDistToFish}\\*
\caption{\textit{Distance to closest baitfish school}}\\

<<fishWithin10km, echo=false, results=hide>>=
#number of baitfish within 10km of each sighting
png("fishWithing10km.png")
par(mfrow = c(1, 2))
bot10k <- distance[bot, bait]
bot10k[bot10k > 10] <- NA
bot10k[bot10k <= 10] <- 1
fish_within_10k <- apply(bot10k, 1, sum, na.rm = TRUE)
hist(fish_within_10k, breaks = seq(0, max(fish_within_10k), by = 0.5), col = "lightgrey")

white10k <- distance[white, bait]
white10k[white10k > 10] <- NA
white10k[white10k <= 10] <- 1
fish_within_10k <- apply(white10k, 1, sum, na.rm = TRUE)
hist(fish_within_10k, breaks = seq(0, max(fish_within_10k), by = 0.5), col = "lightgrey")
dev.off()
@

\includegraphics{fishWithing10km}\\*
\caption{\textit{Number of baitfish schools within 10km of sighting}}\\

Pooling data from all surveys may help identify areas of general high prey density, if any exist. The distance of each bottlenose dolphin and white shark sighting to pooled baitfish sightings is shown below.

<<highPreyDensity, echo=false, results=hide>>=
#distance to baitfish from each sighting (not on same day) to check if sightings in high density prey areas
distance_all <- matrix(0, nrow = nrow(dat_season_north), ncol = nrow(dat_season_north))
for (i in 1:nrow(dat_season_north)) {
  for (j in 1:nrow(dat_season_north)) {
    distance_all[i, j] <- gcd.hf(deg2rad(dat_season_north$Lat[i]), deg2rad(dat_season_north$Long[i]), deg2rad(dat_season_north$Lat[j]), deg2rad(dat_season_north$Long[j]))    
  }
}
png("highPreyDensity.png")
par(mfrow = c(1, 2))
hist(distance_all[bot, bait], main = "Bottlenose dolphin", col = "lightgrey")
hist(distance_all[white, bait], main = "White shark", col = "lightgrey")
dev.off()
@

\includegraphics{highPreyDensity}\\*
\caption{\textit{Distance of bottlenose dolphin and white shark sightings from baitfish sightings over all days to assess high prey density areas}}\\

\paragraph{Clustering of sightings along the transect}

Animals may be clustered along the transect rather than distributed randomly. This clustering may be due to preferences in habitat, prey density or geographic boundaries. The plots below show the number of sightings at each latitude along the transect. Some species are very obviously clustered, such as White sharks, which were almost all seen between the Swansea headland and Redhead beach, and were never seen further south of The Entrance. Baitfish and bottlenose dolphins were seen over the entire survey area however were more populus in some areas than others. Hammerhead sharks were also seen over the entire transect length, but were far more commom in the northern extents of the survey. It is expected that the tests for clustering will reveal that the animals are not distributed randomly along the transect.

<<speciesLatitude, echo=false, results=hide>>=
#number of each species at each latitude
lat_tab <- table(dat$Species, round(dat$Lat, 2))
species <- which(rownames(lat_tab) %in% c("B", "BOT", "HH", "W"))

png("speciesLatitude.png")
par(mfrow = c(2, 2))
barplot(lat_tab[species[1], ], beside = TRUE, main = "# of baitfish sightings at each latitude", xlab = "latitude", ylab = "total sightings")
barplot(lat_tab[species[2], ], beside = TRUE, main = "# of dolphin sightings at each latitude", xlab = "latitude", ylab = "total sightings")
barplot(lat_tab[species[3], ], beside = TRUE, main = "# of hammerhead sightings at each latitude", xlab = "latitude", ylab = "total sightings")
barplot(lat_tab[species[4], ], beside = TRUE, main = "# of white shark sightings at each latitude", xlab = "latitude", ylab = "total sightings")
dev.off()
@

\includegraphics{speciesLatitude}

If sightings are distributed randomly, they should follow a homogeneous Poisson distribution. Two different methods have been used to test this, the Hopkin's statistic and the Kolmogorov-Smirnoff test. The Hopkin's statistic is a ratio of the distance between randomly chosen locations along the transect and their nearest sighting and the distance of randomly chosen sightings from their closest sighting. If clustering is present, the numerator will be larger than the denominator. In general, a Hopkin's test statistic of >0.5 indicates clustering.\\*
The Kolmogorov-Smirnoff test compares the event spacing (sighting rate) to the expected event spacing if the assumption of a homogeneous Poisson distribution holds. For the reference data set, the sighting locations are randomly chosen along the transect and the mean event spacing is used as the lambda to generate Poission random values. A p-value <0.05 indicates a significant difference in the distributions of the observed and reference data. North and southbound flights are compared separately for both tests. Data from all surveys are pooled to attain a large enough sample size to test for clustering.\\* For all species in both directions, p<0.05 indicating that the sightings are not randomly distributed. The p-value for the shark species is far closer than the bottlenose dolphin or baitfish p-values, which at face value appears to indicate that these species are close to randomly distributed. However, as white sharks were virtually seen in one location along the transect they are highly clustered. It is likely that the test is unable to detect this because the event spacing between all sightings is small (as they are all in the same bay), which gives the illusion of a Poisson distribution. In cases such as this, the Hopkin's statistic is more powerful to detect clustering as it uses locations along the entire transect, not only distance between known sightings.

<<areSightingsClustered, echo=false>>=

# -------------- ARE SIGHTINGS CLUSTERED ALONG THE TRANSECT? ---------------- #

#Hopkin's statistic
calculateHopkins <- function(species, dat, direction) {
  
  #function to calculate Hopkin's statistic for clustering
  #formula from Skaug (2006)
  #species = string denoting species
  #dat = full data set
  #direction = string denoting flight direction (N or S)
  
  lat <- seq(min(na.omit(dat$Lat)), max(na.omit(dat$Lat)), length.out = 10000)
  

  species_obs <- dat[dat$Species == species & !is.na(dat$Lat) & dat$Flight.Direction == direction, ]
  n <- nrow(species_obs)
  
  
  chosen_point <- sample(lat, n, replace = FALSE)
  
  Xi <- 0
  for(i in 1:length(chosen_point)) {
    w <- which.min(abs(species_obs$Lat - chosen_point[i]))
    Xi[i] <- gcd.hf(deg2rad(chosen_point[i]), 0, deg2rad(species_obs$Lat[w]), 0)    
  }
  
  Yi <- 0
  for(i in 1:n) {
    rem_obs <- species_obs$Lat[-i]
    w <- which.min(abs(rem_obs - species_obs$Lat[i]))
    Yi[i] <- gcd.hf(deg2rad(species_obs$Lat[i]), 0, deg2rad(rem_obs[w]), 0)    
  }
  
  Hf <- sum(Xi^2)/sum(Yi^2) #Hf > 0.5 indicates clustering
  
  return(Hf)
  
}

calculateHopkins(species = "BOT", dat = dat, direction = "N")


#kolmogorov-smirnoff to compare poisson
calculateKolmogorovSmirnoff <- function(species, dat, direction) {
 
  #tests if sighting rate is poisson using Kolmogorov-Smirnoff test
  #species = string containing species code
  #dat = full data set
  #direction = string containing flight direction
  
  lat <- seq(min(na.omit(dat$Lat)), max(na.omit(dat$Lat)), length.out = 10000)
  species_obs <- dat[dat$Species == species & !is.na(dat$Lat) & dat$Flight.Direction == direction, ]
  n <- nrow(species_obs)  
  chosen_point <- sample(lat, n, replace = FALSE)
  
  event_spacing <- 0
  for (i in 2:length(species_obs$Lat)) {
    event_spacing[i] <- gcd.hf(deg2rad(sort(species_obs$Lat)[i]), 0, deg2rad(sort(species_obs$Lat)[i - 1]), 0)
  }
  
  sim_event_spacing <- 0
  for (i in 2:length(chosen_point)) {
    sim_event_spacing[i] <- gcd.hf(deg2rad(sort(chosen_point)[i]), 0, deg2rad(sort(chosen_point)[i - 1]), 0)
  }
  
  lambda = mean(sim_event_spacing)
  pois_rgen <- rpois(n, lambda)
  
  ks.test(event_spacing, pois_rgen)    
  
}

calculateKolmogorovSmirnoff("B", dat, "S")

@

\paragraph{Other small things}

The swim direction of all dolphin and shark sightings is noted using North-East-South-West or Circling. With the exception of migrating whales, there is not an expectation of which direction the animals will be swimming. No difference was seen in swim direction between north and southbound flights. Only bottlenose dolphin and hammerhead shark sightings are reported in the tables below due to the low number of other shark sightings. As a different number of sightings were seen in the different directions, the tables show the proportion of sightings in the N and S flight Directions where animals were noted as swimming north, south, east, west or circling.

<<swimDirection, echo=false>>=
#bottlenose dolphin
swim_dir_bot <- dat[dat$Species == "BOT" & dat$Swim.Direction %in% c("C", "N", "S", "E", "W"), ]
swim_dir_bot$Swim.Direction <- factor(swim_dir_bot$Swim.Direction)
swim_dir_bot$Flight.Direction <- factor(swim_dir_bot$Flight.Direction)
bot_sightings_north <- nrow(swim_dir_bot[swim_dir_bot$Flight.Direction == "N", ])
bot_sightings_south <- nrow(swim_dir_bot[swim_dir_bot$Flight.Direction == "S", ])
round(table(swim_dir_bot$Flight.Direction, swim_dir_bot$Swim.Direction)/c(bot_sightings_north, bot_sightings_south), 2)

#hammerhead shark
swim_dir_hh <- dat[dat$Species == "HH" & dat$Swim.Direction %in% c("C", "N", "S", "E", "W"), ]
swim_dir_hh$Swim.Direction <- factor(swim_dir_hh$Swim.Direction)
swim_dir_hh$Flight.Direction <- factor(swim_dir_hh$Flight.Direction)
hh_sightings_north <- nrow(swim_dir_hh[swim_dir_hh$Flight.Direction == "N", ])
hh_sightings_south <- nrow(swim_dir_hh[swim_dir_hh$Flight.Direction == "S", ])
round(table(swim_dir_hh$Flight.Direction, swim_dir_hh$Swim.Direction)/c(hh_sightings_north, hh_sightings_south), 2)
@

Bottlenose dolphin group size is estimated at the time of the sighting. A histogram of group sizes shows exponentially decreasing group size, with most containing <10 individuals.

<<groupSize, echo=false, results=hide>>=
png("groupSize.png")
par(mfrow = c(1, 1))
hist(dat$Number[dat$Species == "BOT"], main = "Bottlenose dolphin group size", xlab = "Group size")
dev.off()
@

\includegraphics{groupSize}

\end{document}